{"version":3,"sources":["components/section/Section.js","components/feedbackOptions/FeedbackOptions.js","components/statistics/capsCoffeeTotal/capsCoffeeTotal.js","components/statistics/Statistics.js","components/statistics/notification/Notification.js","App.js","index.js","components/statistics/Statistics.module.css","components/feedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","container","map","option","type","name","button","onClick","CapsCoffeeTotal","total","capsCoffee","Array","from","length","u","i","cap","color","Math","random","toString","substring","toUpperCase","size","Statistics","good","neutral","bad","positivePercentage","list","item","description","itemCapsTotal","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","e","target","positiveFeedbackPercentage","ceil","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.14bd3ccd.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2> {title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import s from \"../feedbackOptions/FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function FeedbackOptions ({ options, onLeaveFeedback })  {\n  // console.log(options)\n  return (\n    <div className={s.container}>\n      {options.map((option) => (\n        <button\n          key={option}\n          type=\"button\"\n          name={option}\n          className={s.button}\n          onClick={ onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\n\n","import PropTypes from \"prop-types\";\n\nimport { GiCoffeeCup } from \"react-icons/gi\";\n\nfunction CapsCoffeeTotal({ total }) {\n  \n  function generateRandomColor() {\n    let color =\n      \"#\" +\n      (Math.random().toString(16) + \"000000\").substring(2, 8).toUpperCase();\n    return color;\n  }\n\n  const capsCoffee = Array.from({ length: total - 1 }).map((u, i) => i);\n\n  return (\n    <>\n      {capsCoffee.map((cap) => (\n        <span key={cap}>\n          <GiCoffeeCup color={generateRandomColor()} size=\"30px\" />\n        </span>\n      ))}\n    </>\n  );\n};\n\nCapsCoffeeTotal.propTypes = {\n  total: PropTypes.number.isRequired,\n};\n\nexport default CapsCoffeeTotal;\n","import PropTypes from \"prop-types\";\nimport s from \"../statistics/Statistics.module.css\";\n\nimport CapsCoffeeTotal from \"./capsCoffeeTotal/capsCoffeeTotal\";\n\nimport { GiCoffeeCup } from \"react-icons/gi\";\nimport { FiCheckCircle } from \"react-icons/fi\";\n\nfunction Statistics  ({ good, neutral, bad, total, positivePercentage }) {\n  \n  return (\n    <ul className={s.list}>\n     \n      <li className={s.item}>\n        <span className={s.description}>Good:</span>\n        <span>{good}</span>\n        <span>\n          <FiCheckCircle color=\"green\" size=\"24px\" />\n        </span>\n      </li>\n\n      <li className={s.item}>\n        <span className={s.description}>Neutral:</span>\n        <span>{neutral}</span>\n        <span>\n          <FiCheckCircle color=\"grey\" size=\"24px\" />\n        </span>\n      </li>\n\n      <li className={s.item}>\n        <span className={s.description}>Bad:</span>\n        <span>{bad}</span>\n        <span>\n          <FiCheckCircle color=\"red\" size=\"24px\" />\n        </span>\n      </li>\n\n      <li className={s.item}>\n        <span className={s.description}>Total:</span>\n        <span>{total}</span>\n        <GiCoffeeCup color=\"green\" size=\"24px\" />\n      </li>\n\n      <li className={s.itemCapsTotal}>\n        <CapsCoffeeTotal total={total}></CapsCoffeeTotal>\n      </li>\n\n      <li className={s.item}>\n        <span>Positive feedback:</span>\n        <span>{positivePercentage} %</span>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import \"./App.css\";\nimport { useState } from \"react\";\n\nimport Section from \"./components/section\";\nimport FeedbackOptions from \"./components/feedbackOptions\";\nimport Statistics from \"./components/statistics\";\nimport Notification from \"./components/statistics/notification\";\n\n\nexport default function App() {\n  \n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = (e) => {\n    // console.log(e.target.name)\n    \n    const { name } = e.target;\n\n    switch (name) {\n     \n      case 'good':\n       setGood(good + 1);       \n        break;\n\n      case 'neutral':\n       setNeutral(neutral + 1);       \n        break;\n\n      case 'bad':\n       setBad(bad + 1);       \n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n   \n    const positiveFeedbackPercentage = (good * 100) / countTotalFeedback();\n    return Math.ceil(positiveFeedbackPercentage);\n  };\n  \n    const options = Object.keys({ good, neutral, bad });\n  \n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n           <FeedbackOptions\n            options={options}\n            onLeaveFeedback={onLeaveFeedback}\n          ></FeedbackOptions>\n        </Section>\n\n        {countTotalFeedback() === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n              <Statistics              \n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}              \n            ></Statistics>\n          </Section>\n        )}\n      </div>\n    );\n  }\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1_eT_\",\"item\":\"Statistics_item__YkYNQ\",\"description\":\"Statistics_description__1PTdJ\",\"itemCapsTotal\":\"Statistics_itemCapsTotal__2OgR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__3MGQt\",\"button\":\"FeedbackOptions_button__1th3l\"};"],"sourceRoot":""}